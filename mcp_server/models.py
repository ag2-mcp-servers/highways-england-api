# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T03:30:11+00:00

from __future__ import annotations

from datetime import datetime
from typing import List, Optional

from pydantic import BaseModel, Field, constr


class Area(BaseModel):
    Description: str
    Id: Optional[str] = None
    Name: str
    XLatitude: constr(
        pattern=r'^(\+|-)?(?:180(?:(?:\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\.[0-9]{1,15})?))$'
    )
    XLongitude: constr(
        pattern=r'^(\+|-)?(?:90(?:(?:\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\.[0-9]{1,15})?))$'
    )
    YLatitude: constr(
        pattern=r'^(\+|-)?(?:180(?:(?:\.0{1,6})?)|(?:[0-9]|[1-9][0-9]|1[0-7][0-9])(?:(?:\.[0-9]{1,15})?))$'
    )
    YLongitude: constr(
        pattern=r'^(\+|-)?(?:90(?:(?:\.0{1,6})?)|(?:[0-9]|[1-8][0-9])(?:(?:\.[0-9]{1,15})?))$'
    )


class AreaResponse(BaseModel):
    areas: Optional[List[Area]] = None
    row_count: Optional[int] = None


class Object(BaseModel):
    pass


class OverallQualityResponse(BaseModel):
    data_quality: Optional[int] = None
    end_date: Optional[str] = None
    row_count: Optional[int] = None
    sites: Optional[str] = None
    start_date: Optional[str] = None


class Qualities(BaseModel):
    Date: Optional[datetime] = None
    Quality: Optional[int] = None


class SiteResult(BaseModel):
    Description: Optional[str] = None
    Id: Optional[str] = None
    Latitude: Optional[float] = None
    Longitude: Optional[float] = None
    Name: Optional[str] = None
    Status: Optional[str] = None


class SiteType(BaseModel):
    Description: Optional[str] = None
    Id: Optional[str] = None


class SiteTypeResponse(BaseModel):
    row_count: Optional[int] = None
    sitetypes: Optional[List[SiteType]] = None


class Sites(BaseModel):
    Active: Optional[List[bool]] = None
    Description: Optional[List[str]] = None
    Id: Optional[List[str]] = None
    Lattitude: Optional[List[float]] = None
    Longitude: Optional[List[float]] = None
    SiteId: Optional[List[str]] = None


class DailyQualityResponse(BaseModel):
    Qualities_1: Optional[List[Qualities]] = Field(None, alias='Qualities')
    row_count: Optional[int] = None


class SiteResponse(BaseModel):
    row_count: Optional[int] = None
    sites: Optional[List[SiteResult]] = None


class SiteTypeLayer(BaseModel):
    Sites_1: Optional[List[Sites]] = Field(None, alias='Sites')
